@precedence {
  compare @left
  and @left
  or @left
}

@top Program { expression* }

@skip { space | LineComment }

expression {
  Identifier |
  String |
  BinaryExpression |
  Function
}

BinaryExpression {
  expression !compare (op<Compare, "==" | ">=" | "<=" | "!="> | CompareOp { "<" | ">" }) expression |
  expression !and (op<Logic, "AND">) expression |
  expression !or (op<Logic, "OR">) expression
}

Function {
  Keyword "(" expression ")"
}


@tokens {
  op[@name={name} "Op"]<name, body> { body }

  Keyword { Identifier ":" }

  Identifier { $[a-zA-Z_\-0-9]+ }

  String { '"' (!["\\] | "\\" _)* '"' }

  LineComment { ";" ![\n]* }

  space { $[ \t\n\r]+ }

  "(" ")"

  @precedence { op, Keyword, Identifier }
}

@detectDelim
